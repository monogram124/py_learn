import numpy as np

# NUMPY - одна из основных библиотек для работы с даннымми, она добавляет поддержку больших, многомерных массивов, матриц и удобной работы с ними

# основа numpy - ndarray, то есть n-мерный массив


# АТРИБУТЫ:

# shape который описывает размер массива по каждому измерению
# К ПРИМЕРУ: если у нас квадратная матрица 2 на 2, shape будет 2, 2

# dtype - этот атрибут показывает тип данных который хрнаиться в нашем массиве

# ndim - кол-во измерений массива
# К ПРИМЕРУ: если матрица квадратная, то ndim = 2

# МЕТОДЫ И ФУНКЦИИ:

# tolist() - конвертирует ndarray в list
# astype() - приводит все элементы массива к указанному тпиу данных
arr = np.array([1.0, 2.0, 3.0])
arr = arr.astype(np.int64)
# arange() - аналог обычного range(), отличие заключается лишь в том что шаг обычного range не работает с дробными числами
arr2 = np.arange(0, 20, 1.5)
print(arr2)
# linspace() - передаются три значения, от какого по какое число нам нужно получить значения и сколько их должно быть
arr3 = np.linspace(0, 2, 50)
print(arr3)
# random() - нужен в тех случаях когда необходимо сгенерировать случайный массив, в качестве аргумента принимает кол-во чисел 
arr4 = np.random.random(5)

# ОПЕРАЦИИ
example_arr = np.array([1, 2, 3, 4, 5])
np.sqrt(example_arr) # квадратный корень 
np.sin(example_arr) # синус
np.cos(example_arr) # косинус
np.log(example_arr) # логорифм
np.exp(example_arr) # экспонента

# С numpy-массивами можно поэлементно выполнять все те операции что мы выполняем с обычными числами

# ПРИЕМУЩЕСТВА:
# array занимает меньше памяти
# обладает значительно большей функциональностью
# хранят в себе однородные ланные

# ОСНОВНЫЕ ВИТДЫ ПОДОБНЫХ МАССИВОВ:
# 1D - одномерные массивы, списки, векторы, shape(x)
# 2D - двумерные массивы, матрицы, shape(x, y)
# 3D - куб, shape(x, y, z)

# СОЗДАНИЕ numpy-массива из обычного list:
data = [1, 2, 3, 4, 5]

data = np.array(data, dtype = np.float64) # приводим к типу флоат, напрямую в конструкторе

print(data)
print(data.shape)
print(data.ndim)
print(data.dtype)
print(len(data))



